---
- name: Check if alertmanager exist
  ansible.builtin.stat:
    path: "{{ alertmanager_bin_dir }}/alertmanager"
  register: __alertmanager_present

- name: If alertmanager exist get version
  ansible.builtin.shell:
    cmd: set -o pipefail && {{ alertmanager_bin_dir }}/alertmanager --version | head -1 | cut -d ' ' -f3
    executable: /bin/bash
  changed_when: false
  register: __alertmanager_current_version
  when: __alertmanager_present.stat.exists

- name: Create the alertmanager group
  ansible.builtin.group:
    name: "{{ alertmanager_group }}"
    state: present
    system: true
  when: alertmanager_group != "root"

- name: Create the alertmanager user
  ansible.builtin.user:
    name: "{{ alertmanager_user }}"
    groups: "{{ alertmanager_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    create_home: false
    home: "{{ alertmanager_db_dir }}"
  when: alertmanager_user != "root"

- name: Create alertmanager directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: 0755
  with_items:
    - "{{ alertmanager_config_dir }}"
    - "{{ alertmanager_db_dir }}"

- name: Get alertmanager binary
  when: (not __alertmanager_present.stat.exists) or (not __alertmanager_current_version.stdout == alertmanager_version) or alertmanager_force_install
  block:
    - name: Download alertmanager binary
      become: false
      ansible.builtin.get_url:
        url: "https://github.com/prometheus/alertmanager/releases/download/v{{ alertmanager_version }}/alertmanager-{{ alertmanager_version }}.linux-amd64.tar.gz"
        dest: "/tmp/alertmanager-{{ alertmanager_version }}.linux-amd64.tar.gz"
        mode: 0644
      delegate_to: localhost

    - name: Unpack alertmanager binary
      become: false
      ansible.builtin.unarchive:
        src: "/tmp/alertmanager-{{ alertmanager_version }}.linux-amd64.tar.gz"
        dest: "/tmp"
        creates: "/tmp/alertmanager-{{ alertmanager_version }}.linux-amd64/alertmanager"
      delegate_to: localhost

    - name: Copy alertmanager binary
      ansible.builtin.copy:
        src: "/tmp/alertmanager-{{ alertmanager_version }}.linux-amd64/{{ item }}"
        dest: "{{ alertmanager_bin_dir }}/{{ item }}"
        owner: root
        group: root
        mode: 0755
      with_items:
        - alertmanager
        - amtool
      notify: restart alertmanager
